from typing import Protocol, Tuple, Dict
import numpy as np

class CBF(Protocol):
    name: str
    def h(self, x: np.ndarray) -> float: ...
    def grad(self, x: np.ndarray) -> np.ndarray: ...
    def alpha(self, h_val: float) -> float: ...

class MPCBase(Protocol):
    def compute_control(self, x_now: np.ndarray, t_now: float, ref: dict | None = None, warmstart: dict | None = None): ...

class CBFFilter(Protocol):
    def set_nominal(self, ctrl: MPCBase) -> None: ...
    def set_cbfs(self, cbfs: Tuple[CBF, ...]) -> None: ...
    def set_weights(self, slack_weights: Dict[str, float]) -> None: ...
